[
["back-propagation.html", "5 Back Propagation 5.1 Computation graphs", " 5 Back Propagation 5.1 Computation graphs 5.1.1 Multiplication layer library(R6) MulLayer &lt;- R6Class( &quot;MulLayer&quot;, public = list( x = NULL, y = NULL, # inputs forward = function(x, y) { self$x &lt;- x self$y &lt;- y x*y }, backward = function(z) { z*c(self$y, self$x) } ) ) apple_price &lt;- 100 apple_num &lt;- 2 tax_rate &lt;- 1.1 # layers apple_layer &lt;- MulLayer$new() tax_layer &lt;- MulLayer$new() # forward apple_ttl_price &lt;- apple_layer$forward(apple_price, apple_num) ttl_price &lt;- tax_layer$forward(apple_ttl_price, tax_rate) cat(ttl_price, &quot;\\n&quot;) ## 220 # backward dttl_price &lt;- 1 dtax_layer &lt;- tax_layer$backward(dttl_price) dapple_layer &lt;- apple_layer$backward(dtax_layer[1]) cat(dapple_layer, dtax_layer[2], &quot;\\n&quot;) ## 2.2 110 200 5.1.2 Addition layer library(R6) AddLayer &lt;- R6Class( &quot;AddLayer&quot;, public = list( forward = function(x, y) { x + y }, backward = function(z) { rep(z, 2) } ) ) apple_price &lt;- 100 apple_num &lt;- 2 orange_price &lt;- 150 orange_num &lt;- 3 tax_rate &lt;- 1.1 # layers apple_layer &lt;- MulLayer$new() orange_layer &lt;- MulLayer$new() basket_layer &lt;- AddLayer$new() tax_layer &lt;- MulLayer$new() # forward apple_ttl_price &lt;- apple_layer$forward(apple_price, apple_num) orange_ttl_price &lt;- orange_layer$forward(orange_price, orange_num) basket_price &lt;- basket_layer$forward(apple_ttl_price, orange_ttl_price) ttl_price &lt;- tax_layer$forward(basket_price, tax_rate) cat(ttl_price, &quot;\\n&quot;) ## 715 # backward dttl &lt;- 1 dtax &lt;- tax_layer$backward(dttl) dbasket &lt;- basket_layer$backward(dtax[1]) dapple &lt;- apple_layer$backward(dbasket[1]) dorange &lt;- orange_layer$backward(dbasket[2]) cat(dapple, dorange, dtax[2], &quot;\\n&quot;) ## 2.2 110 3.3 165 650 5.1.3 Activation layer ReluLayer &lt;- R6Class( &quot;ReluLayer&quot;, public = list( x = NULL, forward = function(x) { self$x = x pmax(0, x) }, backward = function(z) { z*as.integer(x&gt;=0) } ) ) SigmoidLayer &lt;- R6Class( &quot;SigmoidLayer&quot;, public = c( out = NULL, forward = function(x) { o &lt;- 1 / (1+exp(-x)) self$out &lt;- o o }, backward = function(z) { z*(1-self$out)*self$out } ) ) 5.1.4 Softmax layer SoftmaxLayer &lt;- R6Class( &quot;SoftmaxLayer&quot;, public = c( ) ) "]
]
